name: build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # v2.2.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        
      - name: Create pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create PlatformIO Cache
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-platformio-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'cpp'

      - name: Make scripts executable
        run: |
          chmod +x ./ci/ci-compile.sh

      - name: Install Python
        uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0 # v4.6.1
        with:
          python-version: '3.10'

      - name: Install PlatformIO
        run: |
          pip install platformio==6.1.4 --use-pep517

      - name: Run CI Compile
        run: ./ci/ci-compile.sh

      - name: Annotate Build Result
        uses: yuzutech/annotations-action@v0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Build Result'
          input: './annotations.json'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:cpp"
